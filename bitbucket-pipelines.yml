# This is an example Starter pipeline configuration
# Use a skeleton to build, test and deploy using manual and parallel steps
# -----
# You can specify a custom docker image from Docker Hub as your build environment.

image: python:3.9.7

pipelines:
  default:
    - parallel:
        - step:
            name: "Django Controls API test"
            caches:
              - pip
            script:
              - pip install -r requirements.txt
              - pytest api/surv -s -v --durations=0
              - pytest  fibonacci/ -s -v --durations=0
        - step:
            name: "Lint"
            script:
              - echo "Your Linting scan goes here"
        - step:
            name: "Security scan"
            script:
              - echo "Your security scan goes here..."

    # The following deployment steps will be executed for each pipeline run. To configure your steps and conditionally deploy see https://support.atlassian.com/bitbucket-cloud/docs/configure-bitbucket-pipelinesyml/
    - step:
        name: "Deployment to Staging"
        deployment: staging
        script:
          - echo "Your deployment to staging script goes here..."
    - step:
        name: "Deployment to Production"
        deployment: production
        trigger: "manual"
        script:
          - echo "Your deployment to production script goes here..."
